<?xml version="1.0" encoding="UTF-8" ?>
	<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.bls.mybatistest.mappers.UserMapper">
	<select id="getUserById" parameterType="int"
		resultMap="UserResult">
		SELECT
		U.USER_ID, U.EMAIL, U.PASSWORD, U.FIRST_NAME,
		U.LAST_NAME,
		B.BLOG_ID, B.BLOG_TITLE, B.CREATED_ON
		FROM USER U LEFT OUTER
		JOIN BLOG B ON U.BLOG_ID=B.BLOG_ID
		WHERE U.USER_ID = #{userId}
	</select>
	<!-- Instead of referencing Fully Qualified Class Names we can register 
		Aliases in mybatis-config.xml and use Alias names. -->
	<resultMap type="User" id="UserResult">
		<id property="userId" column="USER_ID" />
		<result property="email" column="EMAIL" />
		<result property="password" column="PASSWORD" />
		<result property="firstName" column="FIRST_NAME" />
		<result property="lastName" column="LAST_NAME" />
		<association property="blog" resultMap="BlogResult" />
	</resultMap>
	<resultMap type="Blog" id="BlogResult">
		<id property="blogId" column="BLOG_ID" />
		<result property="blogTitle" column="BLOG_TITLE" />
		<result property="createdOn" column="CREATED_ON" />
	</resultMap>
	<select id="getAllUsers" resultMap="UserResult">
		SELECT
		U.USER_ID, U.EMAIL, U.PASSWORD, U.FIRST_NAME, U.LAST_NAME,
		B.BLOG_ID, B.BLOG_TITLE, B.CREATED_ON
		FROM USER U LEFT OUTER JOIN BLOG B ON U.BLOG_ID=B.BLOG_ID
	</select>
	<insert id="insertUser" parameterType="User" useGeneratedKeys="true"
		keyProperty="userId">
		INSERT INTO USER(EMAIL, PASSWORD, FIRST_NAME, LAST_NAME)
		VALUES(#{email}, #{password}, #{firstName}, #{lastName})
	</insert>
	<update id="updateUser" parameterType="User">
		UPDATE USER
		SET
		PASSWORD=
		#{password},
		FIRST_NAME = #{firstName},
		LAST_NAME = #{lastName}
		WHERE
		USER_ID = #{userId}
	</update>
	<delete id="deleteUser" parameterType="int">
		DELETE FROM USER WHERE
		USER_ID = #{userId}
	</delete>
	<select id="getUserByEmail" parameterType="string" resultMap="UserResult">
		SELECT * FROM USER WHERE EMAIL = #{password}
	</select>
</mapper>